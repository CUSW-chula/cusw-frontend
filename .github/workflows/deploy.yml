name: Build and Push Docker Image

on:
  push:
    branches:
      - dev  # Run this action on push to the dev branch
      - main # Run this action on push to the main branch
  pull_request:
    branches:
      - '*'  # Run checks on all branches when a pull request is created

jobs:
  build-and-push:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'  # Only run for dev and main branches
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub (only for dev and main branches)
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Set up Docker Buildx (enables multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Cache Bun dependencies for faster builds
      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            .bun
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # Step 5: Set the Docker image tag based on the branch
      - name: Set Docker tag
        id: docker_tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TAG=latest-dev" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      # Step 6: Build the Docker image
      - name: Build Docker image
        run: docker build . -t bunnybunbun37204/cusw-frontend:${{ env.TAG }}

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push bunnybunbun37204/cusw-frontend:${{ env.TAG }}

  code-check:
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/main'  # Only for non-dev, non-main branches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 8: Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo 'export BUN_INSTALL="$HOME/.bun"' >> $GITHUB_ENV
          echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> $GITHUB_ENV
          source $GITHUB_ENV

      # Step 9: Lint code using Bun
      - name: Lint code
        run: |
          echo "Running lint checks..."
          bun run lint  # Run lint using Bun
